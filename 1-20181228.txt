2018.12.28
twoseven.kr
id: guest_new
pw: soldesk

 * 원격접속 (putty) 방법

 * bash shell 변수설정방법
    # 사용자 정의 변수(지역변수)
      - 변수타입 선언 no
      - 빈칸없어야함 ex) a=100(o)  a = 100(x)
      - 변수출력은 echo `$변수명`
      - 변수제거는 unset '변수명'
    # 환경변수 : 자식셀로 상속이 되는 변수(전역변수)
      - 환경변수 확인 env
      - export `변수명`으로 선언
      - 환경변수에 등록될 변수는 대문자로 설정하도록 하는것이 좋다

 * shell종류 (명령어해석기)
    - bash(내장), csh(내장), ksh, zsh

 * csh (내장shell) 기본문법이 살짝 다르다
   # 변수설정방법
     - set `변수=값`
   # 쉘스크립트(shell로 만든 프로그램) 실행방법
     - bash `파일명`


 * 명령어
   프로세스확인 ps
   모든프로세스확인 ps -e
   프로세스트리구조로보기 pstree
   현재사용자프로세스트리구조로 보기  pstree -U user1


 * PATH, cat, head, tail, wc, less, more, grep, whereis, which, find[-exec][-ls][-exec...{}...\;],  ...

 * 메타문자(특수문자로 특정명령을 수행하기위한 문자 * \ 등등)

 * redirection(입출력방향재지정) - 예를들어 모니터출력이아닌 프린트출력을 해야할경우...
    0: 표준입력 
    1: 표준출력 
    2: 표준에러 
	> ( = 1>) : 출력방향 전환 (표준출력 => file) 파일이 존재하는 경우는 overwrite 
	>>( = 1>>) : 출력방향 전환 (표준출력 => file) 파일이 존재하는 경우 append 
	<(= 0<) ; 입력방향 전환 (표준입력 => file) 입력을 키보드가 아닌 파일에서 받아들다. 
	2> ; 에러방향 전환 (표준에러 => file) 표준에러의 방향은 모니터이다. 
	에러를 모니터 상에 출력하지 않거나 파일로 남길 때 사용한다. 
   예를들어, 정규표현식을 사용하여 문자열을 모두 소문자or대문자로 변환하는데 등 사용
    ex) tr [A-Z] [a-z] 0< /etc/issue 1> issue.txt == tr [A-Z] [a-z] 0< /etc/issue 1> issue.txt (숫자는생략해도 됨)

 * vi(vim) 편집기 기본명령어 























